异常：
    程序在运行过程中，不可避免的会出现一些错误，比如，使用了没有赋值的变量，使用了不存在的索引，除0.。
    这些错误在程序中，我们称之为异常
    程序运行过程中，一旦出现异常将会导致程序立即终止，异常以后的代码全部都 不会执行
  处理异常：
      程序运行时出现异常，目的并不是让我们的程序直接终止，python是希望在出现异常时，我们可以编写代码来对异常进行处理,else可有可无
      try 语句
          try:
            代码块（可能出现错误的语句）
          except 异常类型 as 异常名:
            代码块（出现错误以后的处理方式）
          else :
            代码块（没出错要执行的语句）
          finally:
            代码块（该代码块总会执行）
         
 异常的传播（抛出异常）
    当在函数中出现异常时，如果在函数中对异常进行处理，则异常不会继续传播
    当在函数中没有对异常进行处理，则异常会继续向调用处传播，直到传播到全局作用域（主模块）如果依然没有处理，则程序终止，并且显示异常信息
    当程序运行过程中出现异常以后，所有的异常信息都会保存到一个专门的异常处理对象中，而异常传播时，实际上是将异常对象抛给调用处 
  try:
    print(c)
  except nameError:
    print()
  如果except后不跟任何的内容，则此时他会捕获到所有的异常，如果不在except后跟着一个异常的类型，那么此时它只会捕获该异常的类型
  Exception 是所有异常类的父类，如果except后跟着Exception，他也会捕获到所有的异常，可以在异常类后面加一个as xxx,此时xxx就是异常对象
  
  抛出异常：  也可以通过if-else 代替异常处理
    raise 异常类 
    reise Exception('')  
  自定义异常：
    Class MyError(Exception):
      pass
      
 文件（File)  f'' 原始字符串
    通过Python程序来对计算机的各种文件进行增删改查的操作
    -i/o （input/output)
      操作文件步骤：
          1，打开文件   open()打开文件
          2，对文件进行各种操作（读，写）
          3,保存文件
    使用open函数打开一个文件
      参数：
        file要打开的文件的名字（路径）
      返回值：
        返回一个对象，这个对象就代表了当前打开的文件
      创建一个变量，来保存文件的名字
      如果目标文件和当前文件在同一级目录下，则直接使用文件名即可
      在windows系统使用路径时，可以使用/来代替\
      或者也可以使用\\来代替\
      或者也可以使用原始字符串 file_name = r'hello\demo.txt'
      表示路径，可以使用..来返回一级目录
      如果目标文件距离当前文件比较远，此时可以使用绝对路径
      
      read()方法，用来读取文件的内容，它会将内容全部保存为一个字符串返回
      调用close（）方法来关闭文件
      with ...as   语句
          with open(file_name，encoding='utf-8') as file_obj:
              通过read()来读取文件内容，会将文本文件的所由内容全部读取出来，如果读取的文件较大时，容易导致内存邪路，所以对于较大文件
                  不要直接使用read()
                  read()可以接收一个size作为参数，该参数用来指定要读取的字符数量，默认值是-1，它会读取文件中的所有字符，可以为size指定一个值
                    这样read()会读取指定数量的字符，每一次读取都是从上次读取的位置开始读取的，如果字符的数量小于size,则会读取剩余所有的
                    如果已经读取到了文件的最后了，则会返回’‘空串
              在with语句中可以直接使用file_obj来做文件操作
              此时这个文件只能在with中使用，一旦with结束，则文件会自动close()
      open()文件打开一个文件，默认是用文本文件形式打开,但是open（）默认的编码是None，所以处理文本文件时，必须要指定文件的编码
        两种文件方式：1，纯文本文件（使用utf-8等编写的文本文件 2，二进制文件（图片，mps,ppt等这些文件)
          content = file_obj.read(6) 读6个字符
          content = file_obj.read(6) 接着上面的位置往下读6个
          content = file_obj.read(6)
       readline() 该方法可以用来读取一行文件
       readlines()该方法用于一行一行的读取内容，它会一次性读取的内容封装到一个列表中返回 r = file_obj.readlines()   r[0]
       for t in file_obj:
          print(t)
       
      写：
          使用open()打开文件时，必须要指定打开文件所要做的操作（读，写，追加）
           如果不指定操作类型，默认时读取文件，而读取文件时，是不能向文件中写入的
           r表示只读的,
           w表示可写的，使用w来写入文件时，如果文件不存在会创建文件,如果不存在会创建文件，如果文件存在则会截断文件，
                      截断文件指的是删除原来文件中的内容
           a 表示追加内容，如果文件不存在会创建文件，如果文件存在则会向文件中追加内容
           r+  即可读又可写 文件不存在会报错
           w+
           a+
           读取模式：
              t 读取文本文件（默认值） size是以字符为单位  读写取时参数加 'wb'  或者'ab'  中文三个字节代表一个字符
              b  读取二进制文件时，  size是以字节为单位                                   英文一个字节代表一个字符
              
           with open(file_name ,'w',endcoding = 'utf-8' as file_obj:
                writer()是向文件中写入内容
                如果操作的是一个文本文件的话，则writer()需要传递一个字符串作为参数
                file_obj.write('\n')
          
          将读取到的内容写出来
            定义一个新的文件
              new_name='a.flac'
            
           file_obj.tell()  方法用来查看当前读取的位置
           file_obj.seek() 用来修改当前读取的位置  如 file_obj.seek(80,0)  file_obj.seek(-10,2)  如果有中文，开始位置不是三的倍数，会报错
                          第一个参数：要切换的位置，
                          第二个：计算位置方式 ，
                                 可选值 ：0，从头计算，默认值
                                          1，从当前位置计算
                                          2，从最后位置开始计算
          
          os 模块：
              os.listdir() 获取指定目录的目录结构 ，需要一个路径作为参数，会获取到该路径下的目录结构，默认路径是，当前目录
                        该方法会返回一个列表，目录中每一个文件（夹）的名字都是列表的一个元素
                        
              os.gecwd() 获取当前所在目录
              
              os.chdir()切换当前所在目录，作用相当于cd  os.chdir('c:/')
              os.mkdir()   在当前目录下创建一个名字为aa目录  os.mkdir('aa')
              os.redir('aa') 删除目录
              os.remove()删除文件
              os.rename('旧名字'，’新名字')  可以对一个文件进行重命名，也可以用来移动一个文件
              
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
